git config --global user.name "Your Name"
git config --global user.email "email@example.com"

git init
git add <file>
git status
git diff
git commit -m ""
git reset --hard HEAD^
git reset --hard commit_id
git log
git reflog
git reset HEAD file
git checkout -- file
git push origin master

git remotr -v
git remote rm origin
git remote add origin git@github.com:tain528/learngit.git
../.ssh/rsa.pub
ssh-keygen -t rsa -C "mail@gmail.com"
ssh-add

要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>
git log --graph --pretty=oneline --abbrev-commit
分支合并图,一行。

git merge --no-ff -m "merge with no-ff" dev

git stash 
git stash list
git stash pop
git stash apply stash@[0]
git stash drop


查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。

git tag v1.0
git tag v0.9 commit_id
git show <tagname>
git tag -a v0.1 -m "version 0.1 released" 3628164
git tag -s v0.2 -m "signed version 0.2 released" fec145a

